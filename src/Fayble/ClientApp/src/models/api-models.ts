//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export interface AuthenticationResult {
    token: string;
    expiration: Date;
    isAuthenticated: boolean;
    userId: string;
    refreshToken: string;
}

export interface LoginCredentials {
    username: string;
    password: string;
}

export interface RefreshTokenRequest {
    refreshToken: string;
}

export interface BackgroundTask {
    id: string;
    itemId: string | undefined;
    itemName: string;
    status: string;
    description: string | undefined;
    type: string;
}

export interface BackgroundTaskRequest {
    itemId: string;
    taskType: string;
}

export interface Book {
    id: string;
    title: string;
    summary: string;
    pageCount: number | undefined;
    fileName: string;
    fileType: string;
    filePath: string;
    fileSize: number;
    rating: number;
    mediaRoot: string;
    publisher: Publisher | undefined;
    read: boolean;
    created: Date;
    modified: Date;
    number: string;
    language: string;
    series: Series | undefined;
    library: Library | undefined;
    releaseDate: string | undefined;
    coverDate: string | undefined;
    lastMetadataUpdate: Date;
    mediaType: string;
    tags: string[] | undefined;
    people: BookPerson[] | undefined;
    isDeleted: boolean;
}

export interface Publisher {
    id: string | undefined;
    name: string;
    description: string;
    mediaPath: string;
}

export interface Series {
    id: string;
    name: string | undefined;
    volume: string | undefined;
    summary: string | undefined;
    notes: string | undefined;
    year: number | undefined;
    bookCount: number | undefined;
    parentSeriesId: string | undefined;
    parentSeries: Series | undefined;
    publisherId: string | undefined;
    publisher: Publisher | undefined;
    rating: number;
    library: Library | undefined;
    read: boolean;
    locked: boolean;
    mediaRoot: string;
    lastMetadataUpdate: Date | undefined;
}

export interface Library {
    id: string | undefined;
    name: string;
    libraryType: string;
    folderPath: string;
    settings: LibrarySettings;
}

export interface LibrarySettings {
    reviewOnImport: boolean;
    seriesFolders: boolean;
}

export interface Person {
    id: string | undefined;
    name: string;
}

export interface BookPerson extends Person {
    role: string;
}

export interface UpdateBook {
    id: string;
    title: string | undefined;
    summary: string | undefined;
    notes: string | undefined;
    rating: number;
    number: string | undefined;
    releaseDate: string | undefined;
    coverDate: string | undefined;
    language: string | undefined;
    review: string | undefined;
    tags: string[];
    people: BookPerson[];
}

export interface RelatedBooks {
    booksInSeries: Book[] | undefined;
    booksByPublisher: Book[] | undefined;
    booksByAuthor: Book[] | undefined;
    booksByWriter: Book[] | undefined;
    booksReleasedSameMonth: Book[] | undefined;
    booksReleasedSameYear: Book[] | undefined;
}

export interface UpdateSeries {
    id: string;
    name: string | undefined;
    year: number | undefined;
    summary: string | undefined;
    notes: string | undefined;
    volume: string | undefined;
    rating: number;
    publisherId: string | undefined;
    parentSeriesId: string | undefined;
}

export interface FirstRun {
    ownerCredentials: LoginCredentials;
}

export interface SystemConfiguration {
    firstRun: boolean;
}

export interface Tag {
    id: string;
    name: string;
}

export interface User {
    id: string;
    username: string;
    role: string | undefined;
}

export interface NewUser {
    username: string;
    password: string;
    role: string;
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}